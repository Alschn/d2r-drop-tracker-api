# Generated by Django 4.0.3 on 2022-04-04 09:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('common_name', models.CharField(blank=True, max_length=20, null=True)),
                ('level_req', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('statistics', models.JSONField(blank=True, default=dict, null=True)),
                ('type', models.CharField(choices=[('helmet', 'Helmet'), ('barb_helm', "Barbarian's Helm"), ('druid_pelt', "Druid's Pelt"), ('armor', 'Armor'), ('shield', 'Shield'), ('auric_shield', "Paladin's Shield"), ('shrunken_head', "Necromancer's Shrunken Head"), ('axe_1h', 'One-handed Axe'), ('axe_2h', 'Two-handed Axe'), ('katar', "Assassin's Claw"), ('dagger', 'Dagger'), ('sword_1h', 'One-handed Sword'), ('sword_2h', 'Two-handed Sword'), ('hammer', 'Hammer'), ('maul', 'Maul'), ('mace', 'Mace'), ('club', 'Club'), ('scepter', 'Scepter'), ('polearm', 'Polearm'), ('aspear', "Amazon's Spear"), ('spear', 'Spear'), ('wand', 'Wand'), ('staff', 'Staff'), ('orb', "Sorceress' Orb"), ('crossbow', 'Crossbow'), ('abow', "Amazon's Bow"), ('bow', 'Bow'), ('throwing', 'Throwing'), ('ajavelin', "Amazon's Javelin"), ('javelin', 'Javelin'), ('ring', 'Ring'), ('amulet', 'Amulet'), ('gem', 'Gem'), ('rune', 'Rune'), ('charm', 'Charm'), ('jewel', 'Jewel'), ('scroll', 'Scroll'), ('tome', 'Tome'), ('ammo', 'Ammunition'), ('potion', 'Potion'), ('key', 'Key'), ('quest', 'Quest')], max_length=13)),
                ('quality', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('superior', 'Superior'), ('magic', 'Magic'), ('rare', 'Rare'), ('crafted', 'Crafted'), ('set', 'Set'), ('unique', 'Unique')], max_length=8)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('common_name', models.CharField(blank=True, max_length=20, null=True)),
                ('level_req', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)])),
                ('statistics', models.JSONField(blank=True, default=dict, null=True)),
                ('type', models.CharField(choices=[('helmet', 'Helmet'), ('barb_helm', "Barbarian's Helm"), ('druid_pelt', "Druid's Pelt"), ('armor', 'Armor'), ('shield', 'Shield'), ('auric_shield', "Paladin's Shield"), ('shrunken_head', "Necromancer's Shrunken Head"), ('axe_1h', 'One-handed Axe'), ('axe_2h', 'Two-handed Axe'), ('katar', "Assassin's Claw"), ('dagger', 'Dagger'), ('sword_1h', 'One-handed Sword'), ('sword_2h', 'Two-handed Sword'), ('hammer', 'Hammer'), ('maul', 'Maul'), ('mace', 'Mace'), ('club', 'Club'), ('scepter', 'Scepter'), ('polearm', 'Polearm'), ('aspear', "Amazon's Spear"), ('spear', 'Spear'), ('wand', 'Wand'), ('staff', 'Staff'), ('orb', "Sorceress' Orb"), ('crossbow', 'Crossbow'), ('abow', "Amazon's Bow"), ('bow', 'Bow'), ('throwing', 'Throwing'), ('ajavelin', "Amazon's Javelin"), ('javelin', 'Javelin'), ('ring', 'Ring'), ('amulet', 'Amulet'), ('gem', 'Gem'), ('rune', 'Rune'), ('charm', 'Charm'), ('jewel', 'Jewel'), ('scroll', 'Scroll'), ('tome', 'Tome'), ('ammo', 'Ammunition'), ('potion', 'Potion'), ('key', 'Key'), ('quest', 'Quest')], max_length=13)),
                ('quality', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('superior', 'Superior'), ('magic', 'Magic'), ('rare', 'Rare'), ('crafted', 'Crafted'), ('set', 'Set'), ('unique', 'Unique')], max_length=8)),
                ('max_sockets', models.PositiveIntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('level_type', models.CharField(choices=[('normal', 'normal'), ('exceptional', 'exceptional'), ('elite', 'elite')], max_length=11)),
                ('class_specific', models.CharField(blank=True, choices=[('amazon', 'Amazon'), ('barbarian', 'Barbarian'), ('necromancer', 'Necromancer'), ('paladin', 'Paladin'), ('sorceress', 'Sorceress'), ('druid', 'Druid'), ('assassin', 'Assassin')], max_length=12, null=True)),
                ('str_req', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(253)])),
                ('dex_req', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(167)])),
                ('durability', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(255)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Runeword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('common_name', models.CharField(blank=True, max_length=20, null=True)),
                ('statistics', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bonus', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConcreteItem',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.item')),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.itembase')),
            ],
            options={
                'abstract': False,
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='RuneInRuneword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('runeword', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='items.runeword')),
            ],
            options={
                'verbose_name_plural': 'Runes in Runeword',
            },
        ),
        migrations.CreateModel(
            name='ItemInSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bonus', models.JSONField(blank=True, default=dict, null=True)),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.set')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.concreteitem')),
            ],
            options={
                'verbose_name_plural': 'Items in Set',
            },
        ),
        migrations.CreateModel(
            name='ConcreteRuneword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statistics', models.JSONField(blank=True, default=dict, null=True)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='items.itembase')),
                ('runeword', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='items.runeword')),
            ],
        ),
        migrations.CreateModel(
            name='Charm',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Charms',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='Jewel',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='Jewelry',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Jewelry',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='Miscellaneous',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Miscellaneous items',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='Rune',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Runes',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('items.item',),
        ),
        migrations.AddField(
            model_name='set',
            name='parts',
            field=models.ManyToManyField(blank=True, through='items.ItemInSet', to='items.concreteitem'),
        ),
        migrations.AddField(
            model_name='runeword',
            name='runes',
            field=models.ManyToManyField(blank=True, through='items.RuneInRuneword', to='items.rune'),
        ),
        migrations.AddField(
            model_name='runeinruneword',
            name='rune',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='items.rune'),
        ),
    ]
